                                                        
                                                        
                                                        
                                                        
|  man                                                      
|  eat                                                       
|                                                        
---------                                                         
 (IO)                                                       
                                                        
     

IO parcel contains all understood symbols(as nodes)
                                                   
                                                        
 symbols in parcel bifrucate (by process below)                                                      
                                                        
                 | man                                          
|  man           -----                                            
|  eat   -->                                                    
|                 | eat                                          
---------         -----                                                 
 (IO)                                                       
                                                        
                                                        


combine a, an, and the into new node (a:the)

form sets of nodes that occur pre and post (a:the)
                                             
    (prep:verb)  (a:the)  (adj:noun)
           

determinter pre/post sets are used to split IO parcel




prepositions are seperated from verbs by ad-hoc code 

(verbs) used to get a set of nouns by

    (noun)  (verb)


each step builds on the last step





parcels form sequence off of IO:

                                                       
                                                        
|  man                                                                
|  eat   -->    (nouns)  ->  (verbs)                             
|                                                                     
---------                                                             
 (IO)                                                                 
                                                        
                                                        
                                                        
                                                        
 the man and eat nodes are all formed from the original nodes in IO, 
so they can all be connected (both directions)   

 passing "man+eat" (unordered) through parcel tree (from IO) will filter
the symbols into the correct order in AA

                                                      
                                                        
|  man           man_n       eat_v          |  man_aa   eat_aa               
|  eat   -->    (nouns) ->  (verbs)  -->    |                 
|                                           |   1         2               
---------                                   ---------                
 (IO)                                        (AA)               
                                                        
                                                        
number line sequence assumed to form in AA             
                                                        

                                                       
                                                        

   man- - - - -  man  - - - - - - - - - - - - man

|  eat - - - - - - - - - -  eat  - - - - - - - - - -  eat    s
|                                           |                 	
|    (X)-->    (n) ---->    (v)             |   1      2     3     
---------      -------      ------          --------------------           
 (IO)           (nouns)     (verbs)          (AA)               
                                                        






                                                    
    (noun)       (verb)       (te)

    man           eat          s



                                        // conjunction
    man
    or 
    woman         eat          s





symbols stack in (det:adj:noun)

  "the"  implies the symbols are      active in AA
  "a"       ""          ""   are not      ""


the stacking is ordered


 (det:adj:noun)       (verb)      (te)        (AA)

                                          |
                                          |  (man):(big) <--nodes active
                                          |
                                          |
                                          |
    the
    big
    man                 eat         s     |
                                          |
                                          |
                                          |
                                          |
                                          |
                                          |




 (det:adj:noun)       (verb)      (te)        (AA)

                                          |
                                          |   nodes not active
                                          |
                                          |
                                          |
    a                                          (n)          <- node activated
    big                                        big:(n)         adj added
    man                                        big:man:(n)     noun identified

                        eat         
                                          |
                                    s     |        
                                          |
                                          |
                                          |
                                          |
                                          |


simplify



(det:adj:noun)       (verb)      (te)        (AA)

                                          |
                                          |   nodes not active
                                          |
                                          |
                                          |
    a                                          (n)         <--node node active
    man                                        (n):man         noun identified
                        eat         s     |    man:eat     
                                          |
                                          |
                                          |
                                          |
                                          |




simplest question generation:



(det:adj:noun)       (verb)      (te)        (AA)

                                          |
                                          |   
                                          |
                                          |
                                          |
    the                                   |     (n)         
    man                                   |     (n):man         
                                          |


   (what)
    man?



(what) node fires 
because man is not
active













nouns can be segregated by 3rd "s"

segregated noun parcel can then be used to generate "s"

baby's (noun) parcel  can bifrucate using "s" symbol 
  on verbs

then bifurcated parcel can be used to 
  trigger "s" on output and also to                                                           
  checksum the noun-verb agreement when listening
                                        a listener
                                                          
                 |  I                                
          ->     -----                               
|   I              
|   man   ->     |  man     ---->  "s"
|   car          |  car          
----------       ------
(nouns)

                                                          
start of the "I" parcel
                                                        
                                                        
                                                        
                                                        
                                                        
                                                        
                                                        
                                                        
                                                        
                                                        
                                                        
                                                        
                                                        
                                                        
                                                        
                                                        
                                                        
                                                        
                                                        
                                                        
                                                        
                                                        
                                                        
                                                        
                                                        
                                                        
                                                        
                                                        
                                                        
                                                        
                                                        
